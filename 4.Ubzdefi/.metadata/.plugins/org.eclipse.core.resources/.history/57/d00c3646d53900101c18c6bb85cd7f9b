package com.nautestech.www.controller;

import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import jakarta.servlet.http.HttpSession;
import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class LoginController {

	@RequestMapping(value = "/", method = { RequestMethod.GET, RequestMethod.POST })
	public String loginPage(@RequestParam(required = false) String error) {
		if (error != null) {
			System.err.println("로그인 실패");
		}
		return "login/login";
	}

	@PostMapping("/createPassword")
	public @ResponseBody ResultDto createPassword(Model model, @RequestParam(required = true) String admin_id,
			@RequestParam(required = true) String admin_phone, @RequestParam(required = true) String admin_name,
			@RequestParam(required = true) String input_msg, @RequestParam(required = true) int pass_length,
			@RequestParam(required = true) String type1, @RequestParam(required = true) String type2,
			@RequestParam(required = true) String type3, @RequestParam(required = true) String type4) {
		// FOR SUCCESS CHECK
		ResultDto result = new ResultDto();
		// GET_SESSION
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		Session session = (Session) principal;
		// CREATE_PASSWORD
		Password_Generator password_Generator = new Password_Generator();
		String generator_password = password_Generator.generatePassword(pass_length, type1, type2, type3, type4);

		// UPDATE_ADMIN
		t_AdminService.admin_update(Integer.parseInt(admin_id), 0, null, null, null, null, null, generator_password,
				null, null, null, null, null, null, null, null, null, session.getAdminName());

		// UPDATE SMS_HISTROY PARAMS
		int comp_id = t_AdminRepository.findById(Integer.parseInt(admin_id)).get().getCompId();
		String send_phone = "18111327";
		String recive_phone = admin_phone;
		String is_send = "N";
		String sms_content = "임시비밀번호 : " + generator_password;
		String is_reserve = "N";
		String sms_kind = "R";
		String request_user = session.getUsername();
		String recive_user = admin_name;
		String send_memo = input_msg;

		t_Sms_HistoryService.insert_sms_history(comp_id, send_phone, recive_phone, is_send, sms_content, is_reserve,
				sms_kind, request_user, recive_user, send_memo);
		result.setResult(true);
		return result;
	}

	@RequestMapping(value = "/logout", method = { RequestMethod.GET, RequestMethod.POST })
	public String logoutPage(HttpSession session) {
		session.invalidate();
		return "login/login";
	}
}
