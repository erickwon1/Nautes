package com.nautestech.www.controller;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.server.ResponseStatusException;

import com.nautestech.www.model.Admin;
import com.nautestech.www.serviceImpl.AdminService;
import com.nautestech.www.serviceImpl.SMSService;

import jakarta.servlet.http.HttpSession;
import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class LoginController {

	private final AdminService adminService;
	private final SMSService smsService;

	@RequestMapping(value = "/", method = { RequestMethod.GET, RequestMethod.POST })
	public String loginPage(@RequestParam(required = false) String error) {
		if (error != null) {
			System.err.println("로그인 실패");
		}
		return "login/login";
	}

	@PostMapping("/verifyCode")
	@ResponseBody
	public String verifyCode(@RequestParam String code, HttpSession session) {
		Object savedCode = session.getAttribute("authCode");

		if (savedCode != null && code.equals(savedCode.toString())) {
			session.removeAttribute("authCode"); // 일회용
			return "SUCCESS";
		} else {
			return "FAIL";
		}
	}

	@PostMapping("/doLogin")
	@ResponseBody
	public String doLogin(@RequestParam String login_id, @RequestParam String password, HttpSession session) {
		Admin admin = adminService.findById(login_id);
		if (admin != null && passwordEncoder.matches(password, admin.getLogin_pwd())) {
			// 1차 로그인 성공 → 인증번호 생성 및 저장
			Certification_Number generator = new Certification_Number();
			int code = generator.createCertification_Number(6);

			session.setAttribute("authCode", code); // 세션에 저장
			session.setAttribute("loginMember", admin);

			smsService.sendSMS(admin.getAdmin_phone(), "인증번호: " + code); // SMS 발송

			return "AUTH_CODE_SENT";
		} else {
			throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, "아이디 또는 비밀번호 오류");
		}
	}

	@RequestMapping(value = "/logout", method = { RequestMethod.GET, RequestMethod.POST })
	public String logoutPage(HttpSession session) {
		session.invalidate();
		return "login/login";
	}
}
