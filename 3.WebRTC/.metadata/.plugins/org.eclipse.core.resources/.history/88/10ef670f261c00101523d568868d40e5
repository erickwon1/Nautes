<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<title>SIP 전화걸기</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
	<script src="https://cdn.jsdelivr.net/npm/sip.js@0.20.0/dist/sip.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sip.js-simple@0.20.0/dist/sip.simple.min.js"></script>
	<script>
		let simpleUser;
		$(document).ready(function () {
			async function createSimpleUser(targetExtension) {
				const target = `sip:${targetExtension}@192.168.1.96`;

				const simple = new SIP.SimpleUser("ws://192.168.1.96:8088/ws", {
					userAgentOptions: {
						uri: 'sip:8887@192.168.1.96',
						authorizationUsername: "8887",
						authorizationPassword: "88871!"
					},
					media: {
						constraints: {audio: true, video: false},
					}
				});
				try {
					const callResponse = await simple.invite(target);
					console.log("Call initiated successfully", callResponse);
				} catch (error) {
					console.error("Error making call", error);
				}


				simple.delegate = {
					onCallAnswered: () => {
						$('#callStatus').text('✅ 통화 연결됨');
					},
					onCallHangup: () => {
						$('#callStatus').text('📴 통화 종료됨');
					},
					onCallReceived: () => {
						simple.answer();
					},
					onCallCreated: () => {
						$('#callStatus').text(`📞 ${targetExtension}로 전화 거는 중...`);
					},
					onCallFailed: () => {
						$('#callStatus').text('❌ 통화 실패');
					}
				};

				await simple.connect();
				return {simple, target};
			}

			async function makeCall() {

				const extension = $('#extensionInput').val().trim();
				if (!extension) {
					$('#callStatus').text('❌ 내선 번호를 입력하세요.');
					return;
				}

				try {
					await navigator.mediaDevices.getUserMedia({audio: true});

					$('#callStatus').text('🔍 내선 번호 확인 중...');

					$.get("/sip/list", async function (data) {
						const account = data.find(acc => acc.extension === extension);
						if (!account) {
							$('#callStatus').text('❌ 존재하지 않는 내선 번호입니다.');
							return;
						}

						const {simple, target} = await createSimpleUser(extension);
						simpleUser = simple;

						await simpleUser.call(target);
					}).fail(() => {
						$('#callStatus').text('❌ 서버 응답 실패');
					});
				} catch (err) {
					console.error(err);
					$('#callStatus').text('❌ 마이크 권한이 필요합니다.');
				}
			}
		});
	</script>
	<style>
		body {
			background-color: #f7f9fc;
		}

		.container {
			max-width: 500px;
			margin-top: 100px;
		}

		.status-box {
			height: 40px;
			font-weight: bold;
		}
	</style>
</head>

<body>
	<div class="container border rounded p-4 shadow bg-white">
		<h3 class="text-center mb-4">📞 내선 번호 전화걸기</h3>

		<div class="mb-3">
			<label for="extensionInput" class="form-label">내선 번호 입력</label>
			<input type="text" class="form-control" id="extensionInput" placeholder="예: 8888">
		</div>

		<div class="d-grid mb-3">
			<button class="btn btn-primary" onclick="makeCall()">전화 걸기</button>
		</div>

		<div id="callStatus" class="alert alert-secondary text-center status-box" role="alert">
			대기 중...
		</div>
	</div>


</body>

</html>