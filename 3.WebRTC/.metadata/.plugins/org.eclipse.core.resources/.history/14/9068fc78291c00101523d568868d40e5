<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>SIP 전화걸기</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
	<script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sip.js@0.16.2/dist/sip.min.js"></script>
</head>

<body>
	<div class="container border rounded p-4 shadow bg-white" style="max-width: 500px; margin-top: 100px;">
		<h3 class="text-center mb-4">📞 내선 번호 전화걸기</h3>

		<div class="mb-3">
			<label for="extensionInput" class="form-label">내선 번호 입력</label>
			<input type="text" class="form-control" id="extensionInput" placeholder="예: 8888">
		</div>

		<div class="d-grid mb-3">
			<button class="btn btn-primary" onclick="makeCall()">전화 걸기</button>
		</div>

		<div id="callStatus" class="alert alert-secondary text-center" role="alert">
			대기 중...
		</div>
	</div>

	<script>
		let userAgent;

		// SIP.js User Agent 생성
		function createUserAgent() {
			userAgent = new SIP.UA({
				uri: 'sip:8887@192.168.1.96',  // 자신의 SIP URI
				transportOptions: {
					wsServers: ['ws://192.168.1.96:5060'], // WebSocket 서버 주소 (예시)
					traceSip: true
				},
				authorizationUsername: '8887', // 인증 사용자 이름
				authorizationPassword: '88871!', // 인증 비밀번호
				sessionDescriptionHandlerFactoryOptions: {
					constraints: {
						audio: true,
						video: false
					}
				}
			});
		}

		// 전화 걸기 함수
		async function makeCall() {
			const extension = $('#extensionInput').val().trim();
			if (!extension) {
				$('#callStatus').text('❌ 내선 번호를 입력하세요.');
				return;
			}

			try {
				await navigator.mediaDevices.getUserMedia({audio: true}); // 마이크 권한 요청

				$('#callStatus').text('📞 전화 준비 중...');

				// User Agent 생성
				if (!userAgent) {
					createUserAgent();
				}

				// SIP 요청을 통한 전화 걸기
				const targetURI = `sip:${extension}@192.168.1.96`;
				const session = userAgent.invite(targetURI, {
					media: {
						constraints: {audio: true, video: false}
					}
				});

				// 콜백 처리
				session.on('accepted', () => {
					$('#callStatus').text('✅ 통화 연결됨');
				});

				session.on('bye', () => {
					$('#callStatus').text('📴 통화 종료됨');
				});

				session.on('failed', () => {
					$('#callStatus').text('❌ 전화 실패');
				});

				session.on('started', () => {
					$('#callStatus').text(`📞 ${extension}로 전화 거는 중...`);
				});

			} catch (err) {
				console.error(err);
				$('#callStatus').text('❌ 오류 발생: ' + err.message);
			}
		}
	</script>
</body>

</html>